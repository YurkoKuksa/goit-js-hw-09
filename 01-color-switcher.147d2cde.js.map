{"mappings":"YAAA,SAASA,IACP,MAAO,IAEWC,OAFPC,KAAKC,MAAsB,SAAhBD,KAAKE,UACxBC,SAAS,IACTC,SAAS,EAAG,G,CAGjB,IAAMC,EAAO,CACXC,YAAaC,SAASC,cAAc,sBACpCC,WAAYF,SAASC,cAAc,sBAGrCH,EAAKC,YAAYI,iBAAiB,SASlC,WAE6BL,EAAtBC,YAAYK,UAAW,EAE5BC,EAAUC,aAAY,WACpBN,SAASO,KAAKC,MAAMC,gBAAkBlB,IACtCmB,QAAQC,IAAI,gBAA+BnB,SAAboB,EAAQ,OAAyBpB,OAApBD,K,GAC1C,I,IAfLO,EAAKI,WAAWC,iBAAiB,SAiBjC,WACEU,cAAcR,GACdK,QAAQC,IAAI,oBAA4BnB,OAARa,EAAQ,kBAEFP,EAAjCC,YAAYK,UAAW,C,IAnB9B,IAAIC,EAAU,KAGVO,EAAU,C","sources":["src/js/01-color-switcher.js"],"sourcesContent":["function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n\nconst refs = {\n  startButton: document.querySelector('button[data-start]'),\n  stopButton: document.querySelector('button[data-stop]'),\n};\n\nrefs.startButton.addEventListener('click', toTargetRun);\nrefs.stopButton.addEventListener('click', toTargetStop);\n\nlet timerId = null;\n\n// ====================\nlet element = 0;\n// ====================\n\nfunction toTargetRun() {\n  // Забороняємо натискання кнопки \"Start\"\n  refs.startButton.disabled = true;\n\n  timerId = setInterval(() => {\n    document.body.style.backgroundColor = getRandomHexColor();\n    console.log(`random color ${++element}:  ${getRandomHexColor()}`);\n  }, 1000);\n}\nfunction toTargetStop() {\n  clearInterval(timerId);\n  console.log(`Interval with id ${timerId} has stopped!`);\n  // Дозволяємо натискання кнопки \"Start\" після зупинки\n  refs.startButton.disabled = false;\n}\n\n//\n///\n\n///\n\n// const preciseTeamMeetingDate = new Date('March 16, 2030 14:25:00');\n// console.log(preciseTeamMeetingDate.setMinutes(50));\n\n// const date = new Date();\n// console.log(\n//   'Today is: ',\n//   date.getDate(),\n//   '-',\n//   date.getMonth(),\n//   '-',\n//   date.getFullYear(),\n//   ' ----  ',\n//   date.setMinutes(5)\n// );\n\n// const date = new Date('March 16, 2030 14:25:00');\n\n// console.log(date.setMinutes(50), date.setFullYear(2040, 4, 8));\n\n// const date = new Date('March 16, 2030 14:25:00');\n\n// console.log(\n//   date.toString() +\n//     '\\n' +\n//     date.toTimeString() +\n//     '\\n' +\n//     date.toLocaleTimeString() +\n//     '\\n' +\n//     date.toUTCString() +\n//     '\\n' +\n//     date.toDateString() +\n//     '\\n' +\n//     date.toISOString() +\n//     '\\n' +\n//     date.toLocaleString() +\n//     '\\n' +\n//     date.getTime()\n// );\n\n// // Change value of isSuccess variable to call resolve or reject\n// const isSuccess = true;\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve('Success! Value passed to resolve function');\n//     } else {\n//       reject('Error! Error passed to reject function');\n//     }\n//   }, 2000);\n//   console.log(resolve, reject);\n// });\n///////////////////////////////////////////////////////\n// Функція, яка повертає Promise і виконується асинхронно\n// function fetchData() {\n//   return new Promise((resolve, reject) => {\n//     // Симулюємо асинхронний запит даних\n//     setTimeout(() => {\n//       const data = 'Дані успішно завантажено';\n\n//       // Перевірка, чи дані були успішно завантажені чи ні\n//       if (data) {\n//         resolve(data); // Викликаємо resolve у випадку успішного завершення\n//       } else {\n//         reject('Не вдалося завантажити дані'); // Викликаємо reject у випадку помилки\n//       }\n//     }, 2000); // Симуляція 2-секундного запиту\n//   });\n// }\n\n// // Викликаємо функцію з Promise\n// fetchData()\n//   .then(result => {\n//     console.log('Успіх:', result);\n//   })\n//   .catch(error => {\n//     console.error('Помилка:', error);\n//   });\n/////////////////////////////////////////////////////////////////////////\n\n// function fetchData(shouldSucceed) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldSucceed) {\n//         resolve('Дані успішно завантажено');\n//       } else {\n//         reject('Не вдалося завантажити дані');\n//       }\n//     }, 100);\n//   });\n// }\n\n// // Викликати функцію з передачею true, якщо ви хочете, щоб Promise був вирішений успішно\n// fetchData(true)\n//   .then(result => {\n//     console.log('Успіх:', result);\n//   })\n//   .catch(error => {\n//     console.error('Помилка:', error);\n//   });\n\n//////////////////////////////////////////////////////////\n// <!DOCTYPE html>\n// <html lang=\"en\">\n// <head>\n//   <meta charset=\"UTF-8\">\n//   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//   <title>Гра вгадай слово</title>\n//   <script src=\"game.js\" defer></script>\n// </head>\n// <body>\n\n// <h1>Гра вгадай слово</h1>\n// <p id=\"result\"></p>\n// <input type=\"text\" id=\"guessInput\" placeholder=\"Введіть слово\">\n// <button onclick=\"checkGuess()\">Підтвердити</button>\n\n// </body>\n// </html>\n// *****************************\n// game.js\n\n// function fetchData(shouldSucceed) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldSucceed) {\n//         resolve('Ви вгадали слово!');\n//       } else {\n//         reject('Невірно, ви програли.');\n//       }\n//     }, 2000);\n//   });\n// }\n\n// function checkGuess() {\n//   const guessInput = document.getElementById('guessInput').value.toLowerCase();\n\n//   // Викликаємо асинхронну задачу, яка повертає Promise\n//   fetchData(guessInput === 'Каденюк')\n//     .then(result => {\n//       document.getElementById('result').innerText = result;\n//     })\n//     .catch(error => {\n//       document.getElementById('result').innerText = error;\n//     });\n// }\n//////////////////////////////////////////////\n"],"names":["$2ec2bf6e450c0fe9$var$getRandomHexColor","concat","Math","floor","random","toString","padStart","$2ec2bf6e450c0fe9$var$refs","startButton","document","querySelector","stopButton","addEventListener","disabled","$2ec2bf6e450c0fe9$var$timerId","setInterval","body","style","backgroundColor","console","log","$2ec2bf6e450c0fe9$var$element","clearInterval"],"version":3,"file":"01-color-switcher.147d2cde.js.map"}