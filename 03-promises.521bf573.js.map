{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAQA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAfA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAe3B,SAAwBC,GACtBA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOH,EAAII,OAAOC,SAASjB,MAAMkB,OAC9CC,EAAYJ,OAAOH,EAAII,OAAOC,SAASG,KAAKF,OAC5CG,EAAcN,OAAOH,EAAII,OAAOC,SAASK,OAAOJ,OAEpD,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,IAChCzB,EAAcyB,EAAGT,GACdU,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,MAAU,IAGnDc,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', toTargetSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction toTargetSubmit(evt) {\n  evt.preventDefault();\n\n  let delayInput = Number(evt.target.elements.delay.value);\n  let stepInput = Number(evt.target.elements.step.value);\n  let amountInput = Number(evt.target.elements.amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayInput += stepInput;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","evt","preventDefault","delayInput","Number","target","elements","value","stepInput","step","amountInput","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.521bf573.js.map"}