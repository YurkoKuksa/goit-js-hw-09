{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAQA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAfM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAe3B,SAAwBC,GACtBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOH,EAAII,OAAOC,SAASjB,MAAMkB,OAC9CC,EAAYJ,OAAOH,EAAII,OAAOC,SAASG,KAAKF,OAC5CG,EAAcN,OAAOH,EAAII,OAAOC,SAASK,OAAOJ,OAE3CK,EAAI,EAAGA,GAAKF,EAAaE,IAChCzB,EAAcyB,EAAGT,GACdU,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjDc,GAAcK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', toTargetSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction toTargetSubmit(evt) {\n  evt.preventDefault();\n\n  let delayInput = Number(evt.target.elements.delay.value);\n  let stepInput = Number(evt.target.elements.step.value);\n  let amountInput = Number(evt.target.elements.amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayInput += stepInput;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","evt","preventDefault","delayInput","Number","target","elements","value","stepInput","step","amountInput","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.04876f86.js.map"}